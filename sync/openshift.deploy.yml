apiVersion: template.openshift.io/v1
kind: Template
parameters:
  ### Required
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: PROMOTE
    description: Image (namespace/name:tag) to promote/import
    required: true

  ### Optional
  - name: NAME
    description: Module name
    value: nr-spar-data
  - name: COMPONENT
    description: Component name
    value: sync
  - name: IMAGE_TAG
    description: Image tag to use
    value: latest
  - name: "SUCCESS_JOBS_HISTORY_LIMIT"
    description: "The number of successful jobs that will be retained"
    value: "5"
    required: true
  - name: "FAILED_JOBS_HISTORY_LIMIT"
    description: "The number of failed jobs that will be retained"
    value: "2"
    required: true
  - name: "JOB_BACKOFF_LIMIT"
    description: "The number of attempts to try for a successful job outcome"
    value: "0"
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: CRON_MINUTES
    description: Random number, 0-60, for scheduling cronjobs
    from: "[0-5]{1}[0-9]{1}"
    generate: expression
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: "${NAME}-${ZONE}"
      name: "${NAME}-${ZONE}-${COMPONENT}"
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: "${IMAGE_TAG}"
          from:
            kind: DockerImage
            name: "${REGISTRY}/${PROMOTE}"
          referencePolicy:
            type: Local
  - kind: CronJob
    apiVersion: "batch/v1"
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
        cronjob: ${NAME}-${ZONE}
    spec:
      schedule: "${CRON_MINUTES} 8 * * *" # Run daily at 8:xx AM UTC
      concurrencyPolicy: "Replace"
      successfulJobsHistoryLimit: "${{SUCCESS_JOBS_HISTORY_LIMIT}}"
      failedJobsHistoryLimit: "${{FAILED_JOBS_HISTORY_LIMIT}}"
      jobTemplate:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            cronjob: ${NAME}-${ZONE}
        spec:
          backoffLimit: ${{JOB_BACKOFF_LIMIT}}
          template:
            metadata:
              labels:
                app: ${NAME}-${ZONE}
                cronjob: ${NAME}-${ZONE}
            spec:
              containers:
                - name: ${NAME}-${ZONE}
                  image: "${NAME}-${ZONE}-${COMPONENT}:${IMAGE_TAG}"
                  env:
                    - name: POSTGRES_SERVICE
                      value: "${NAME}-${ZONE}-database"
                    # - name: POSTGRES_DATABASE
                    #   valueFrom:
                    #     secretKeyRef:
                    #       name: "${NAME}-${ZONE}-database"
                    #       key: "database-name"
                    # - name: POSTGRES_USER
                    #   valueFrom:
                    #     secretKeyRef:
                    #       name: ${NAME}-${ZONE}-database
                    #       key: "database-user"
                    # - name: POSTGRES_PASSWORD
                    #   valueFrom:
                    #     secretKeyRef:
                    #       name: ${NAME}-${ZONE}-database
                    #       key: "database-password"
              restartPolicy: "Never"
              terminationGracePeriodSeconds: 30
              activeDeadlineSeconds: 1600
              dnsPolicy: "ClusterFirst"
              serviceAccountName: "default"
              serviceAccount: "default"
